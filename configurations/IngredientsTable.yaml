Resources:
  IngredientsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      "AttributeDefinitions":
        - "AttributeName": "itemId"
          "AttributeType": "S"
      "KeySchema":
        - "AttributeName": "itemId"
          "KeyType": "HASH"
      BillingMode: PAY_PER_REQUEST
      TableName: "Ingredients"
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: dynamodbAccessRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:*
                Resource: "*"
  InitFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: >
          const AWS = require("aws-sdk");
          const response = require('./cfn-response');
          const docClient = new AWS.DynamoDB.DocumentClient();
          exports.handler = function(event, context) {
            console.log(JSON.stringify(event,null,2));
            var params = {
              RequestItems: {
                "Ingredients": [
                  {
                    PutRequest: {
                      Item: {
                        itemId: "ijh851" ,
                        name: "CRUST" ,
                        description: "Crust for pizza" ,
                        stock:  30 ,
                        cost: 1
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "orc987",
                        name: "RED_SAUCE",
                        description: "Classic red sauce",
                        stock: 10 ,
                        cost: 0.5
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "iew345",
                        name: "CHEESE",
                        description: "Cheese on top",
                        stock: 10,
                        cost: 1
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "qwe874",
                        name: "HAM",
                        description: "Ham",
                        stock: 10,
                        cost: 1
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "ngr286",
                        name: "PINEAPPLE",
                        description: "Fresh pineapple",
                        stock: 10,
                        cost: 0.5
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "xut052",
                        name: "PEPPERONI",
                        description: "Pepperoni",
                        stock: 10,
                        cost: 1.5
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "wmt209",
                        name: "WHITE_SAUCE",
                        description: "Creamy white sauce",
                        stock: 10,
                        cost: 0.5
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "pmt695",
                        name: "MUSHROOM",
                        description: "Fresh mushrooms",
                        stock: 10,
                        cost: 0.5
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "ubh543",
                        name: "ONION",
                        description: "Fresh onion",
                        stock: 10,
                        cost: 0.5
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "pfr193",
                        name: "BELL_PEPPER",
                        description: "Fresh bell pepper",
                        stock: 10,
                        cost: 0.5
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "wit879",
                        name: "BBQ_SAUCE",
                        description: "Smoky BBQ sauce",
                        stock: 10,
                        cost: 0.5
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "plg875",
                        name: "CHICKEN",
                        description: "Chicken breasts",
                        stock: 10,
                        cost: 1.5
                      }
                    }
                  },
                  {
                    PutRequest: {
                      Item: {
                        itemId: "jrn306",
                        name: "BACON",
                        description: "Smoked bacon",
                        stock: 10,
                        cost: 1.5
                      }
                    }
                  }
                ]
              }
            };
            docClient.batchWrite(params, function(err, data) {
              if (err) {
                response.send(event, context, "FAILED", {});
              } else {
                response.send(event, context, "SUCCESS", {});
              }
            });
          };
      Handler: index.handler
      Role:
        Fn::GetAtt: [ LambdaRole , "Arn" ]
      # 2020-02-27: [bp] updated from nodejs10.x in case it matters
      Runtime: nodejs12.x
      Timeout: 180
  InitializeEventsTable:
    Type: Custom::InitFunction
    DependsOn: IngredientsTable
    Properties:
      ServiceToken:
        Fn::GetAtt: [ InitFunction , "Arn" ]
      DynamoTableName:
        Ref: IngredientsTable
